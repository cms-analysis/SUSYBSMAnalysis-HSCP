process Tertiary =  {
  
source = PoolSource 
{ 
     # replace 'myfile.root' with the source file you want to use
     untracked vstring fileNames = {"file:/export/data1/rizzi/30064CE9-2874-DC11-A073-000423D9899C.root"} 
}

#keep the logging output to a nice level
service = MessageLogger {}

untracked PSet maxEvents = {untracked int32 input = -1}






# tracker geometry
#include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

# tracker numbering
#include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

#Refitter (+ access to Trajectory)
#include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
#replace TrackRefitter.TrajectoryInEvent = true

# Track Associators
# include "SimTracker/TrackAssociation/data/TrackAssociatorByChi2.cfi"
# include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"

#include "Configuration/StandardSequences/data/Reconstruction.cff"

#include "Configuration/ReleaseValidation/data/Services.cfi"
#include "Configuration/StandardSequences/data/FakeConditions.cff"

#replace genParticleCandidates.abortOnUnknownPDGCode = false


#include "RecoTracker/DeDx/data/dedxHitsFromRefitter.cfi"
include "RecoTracker/DeDx/data/dedxTruncated40.cfi"
include "RecoTracker/DeDx/data/dedxHarmonic2.cfi"
#  include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"

  service = TFileService {
    string fileName = "tmp.root"
  }

module dedxHarmonic4 = dedxHarmonic2 from "RecoTracker/DeDx/data/dedxHarmonic2.cfi"
replace dedxHarmonic4.exponent = -4

#replace dedxTruncated40.trackDeDxHits = dedxHitsFromRefitter
replace dedxHarmonic4.trackDeDxHits = dedxHitsFromRefitter

module dedxFit = DeDxBetaWithLikelihood
   {
     InputTag trackDeDxHits = dedxHitsFromRefitter
   }



    module out = PoolOutputModule {
        untracked string fileName = 'outsignal.root'
         untracked vstring outputCommands = {
                       "drop *",
                       "keep *_dedxHitsFromRefitter_*_SKIM",
                       "keep *_dedxTruncated40_*_SKIM",
                       "keep *_*_*_Tertiary",
                       "keep recoVertexs_*_*_*",
                       "keep *_ctfWithMaterialTracks_*_*",
                       "keep *_muons_*_*",
                       "keep *_*_*_Split",
                       "keep *_TriggerResult_*_*"
//                       "keep *_source_*_*"
    }


    }



  path p = { dedxHarmonic4, dedxFit} 
  endpath  e = {out}
}
